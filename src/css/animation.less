.makeRandom(@min: 0, @max: @min+1, @int: 0) { 
    .checkInt() {
      @getNum: `Math.random() * (@{max} - @{min} + @{int})`;
      @base: unit(`@{int} == 1 ? Math.floor(@{getNum}) : @{getNum}`);
    }
    .checkInt();
    @randNum: unit(@base + @min, s);
}

.loop (@n, @index: 0) when (@index <= @n) {
    @keyframeSel: percentage(@index/@n); 
    @{keyframeSel}{
        @top: `Math.floor(Math.random() * 100)/100`;
        @bottom: `Math.floor(Math.random() * 101-@{top})/100`;
        clip-path: inset(percentage(@top) 0 percentage(@bottom) 0);
    }
    .loop(@n, (@index + 1));
}

@keyframes spin {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    }
}
@-webkit-keyframes spin {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    }
}

@keyframes spinAnti {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(-180deg);
    transform: rotate(-180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
    }
}
@-webkit-keyframes spinAnti {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(-180deg);
    transform: rotate(-180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
    }
}

@keyframes fadeIn {
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

@keyframes fadeOut {
    0%{
        opacity: 1;
    }
    100%{
        opacity: 0;   
    }
}

@fadeLength: unit(0.25, s);
@introLength: unit(1, s);

.easeOut{
    -webkit-animation: fadeOut @introLength ease-in;
    animation: fadeOut @introLength ease-in;
}

.easeIn{
    -webkit-animation: fadeIn @introLength ease-in;
    animation: fadeIn @introLength ease-in;
}

.easeOutForward{
    -webkit-animation: fadeOut @fadeLength linear, spin @fadeLength linear;
    animation: fadeOut @fadeLength linear, spin @fadeLength linear;
}

.easeInForward{
    -webkit-animation: fadeIn @fadeLength linear, spinAnti @fadeLength linear;
    animation: fadeIn @fadeLength linear, spinAnti @fadeLength linear;
}

.easeOutBackward{
    -webkit-animation: fadeOut @fadeLength linear, spinAnti @fadeLength linear;
    animation: fadeOut @fadeLength linear, spinAnti @fadeLength linear;
}

.easeInBackward{
    -webkit-animation: fadeIn @fadeLength linear, spin @fadeLength linear;
    animation: fadeIn @fadeLength linear, spin @fadeLength linear;
}

@keyframes noiseTop {
    .loop(@n: 20);
}

@keyframes noiseBottom {
    .loop(@n: 20);
}

@animationLength: unit(2.5, s);

.spin {
    -webkit-animation: spin @animationLength infinite linear;     
    animation: spin @animationLength infinite linear;
}

.spinAnti {
    -webkit-animation: spinAnti @animationLength infinite linear;     
    animation: spinAnti @animationLength infinite linear;
}

.glitch1 {
    left: -2px;
    -webkit-animation: noiseBottom @animationLength infinite linear;
    animation: noiseBottom @animationLength infinite linear;
}

.glitch2 {
    left: 2px;
    -webkit-animation: noiseTop @animationLength infinite linear;
    animation: noiseTop @animationLength infinite linear;
}

.icon {
    position: absolute;
    width: inherit;
    height: inherit;
    max-width: inherit;
    max-height: inherit;
}