.makeRandom(@min: 0, @max: @min+1, @int: 0) { 
    .checkInt() {
      @getNum: `Math.random() * (@{max} - @{min} + @{int})`;
      @base: unit(`@{int} == 1 ? Math.floor(@{getNum}) : @{getNum}`);
    }
    .checkInt();
    @randNum: unit(@base + @min, s);
}

.loop (@n, @index: 0) when (@index <= @n) {
    @keyframeSel: percentage(@index/@n); 
    @{keyframeSel}{
        @top: `Math.floor(Math.random() * 100)`;
        @bottom: `Math.floor(Math.random() * (101-@{top}))`;
        clip-path: inset(percentage(`@{top}/100`) 0 percentage(`@{bottom}/100`) 0);
    }
    .loop(@n, (@index + 1));
}

@keyframes spin {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    }
}
@-webkit-keyframes spin {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
    }
}

@keyframes spinAnti {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(-180deg);
    transform: rotate(-180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
    }
}
@-webkit-keyframes spinAnti {
    0% {
    -webkit-transform: rotate(0);
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
    50% {
    -webkit-transform: rotate(-180deg);
    transform: rotate(-180deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    100% {
    -webkit-transform: rotate(-360deg);
    transform: rotate(-360deg);
    }
}

@keyframes fadeIn {
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

@keyframes fadeOut {
    0%{
        opacity: 1;
    }
    100%{
        opacity: 0;   
    }
}

@fadeLength: unit(0.25, s);
@introLength: unit(1, s);

.easeOut{
    -webkit-animation: fadeOut @introLength cubic-bezier(1,0,1,0.31);
    animation: fadeOut @introLength cubic-bezier(1,0,1,0.31);
}

.easeIn{
    -webkit-animation: fadeIn @introLength cubic-bezier(1,0,1,0.31);
    animation: fadeIn @introLength cubic-bezier(1,0,1,0.31);
}

.easeOutForward{
    -webkit-animation: fadeOut @fadeLength linear, spin @fadeLength linear;
    animation: fadeOut @fadeLength linear, spin @fadeLength linear;
}

.easeInForward{
    -webkit-animation: fadeIn @fadeLength linear, spinAnti @fadeLength linear;
    animation: fadeIn @fadeLength linear, spinAnti @fadeLength linear;
}

.easeOutBackward{
    -webkit-animation: fadeOut @fadeLength linear, spinAnti @fadeLength cubic-bezier(0.68, -0.55, 0.265, 1.55);
    animation: fadeOut @fadeLength linear, spinAnti @fadeLength linear;
}

.easeInBackward{
    -webkit-animation: fadeIn @fadeLength linear, spin @fadeLength cubic-bezier(0.645, 0.045, 0.355, 1);
    animation: fadeIn @fadeLength linear, spin @fadeLength linear;
}

@keyframes noiseTop {
    .loop(@n: 20);
}

@keyframes noiseBottom {
    .loop(@n: 20);
}

@animationLength: unit(2.5, s);

.spin {
    -webkit-animation: spin @animationLength infinite linear;     
    animation: spin @animationLength infinite linear;
}

.spinAnti {
    -webkit-animation: spinAnti @animationLength infinite linear;     
    animation: spinAnti @animationLength infinite linear;
}

.glitch1 {
    -webkit-animation: noiseBottom @animationLength infinite linear;
    animation: noiseBottom @animationLength infinite linear;
}

.glitch2 {
    -webkit-animation: noiseTop @animationLength infinite linear;
    animation: noiseTop @animationLength infinite linear;
}

.icon-parent {
    display: grid;
    grid-template-columns: 1fr;
}

.icon, .iconNoPos{
    width: 100%;
    height: inherit;
    max-width: inherit;
    max-height: inherit;
    grid-row-start: 1;
    grid-column-start: 1;
}

.fitDiv{
    max-width: 100%;
}

.parallax {
    left: 50%;
    right: 50%;

	margin-left: -50vw;
    margin-right: -50vw;
    
	max-width: 100vw;
    width: 100vw;
    
    position: relative;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}


// Define keyframes for individual cloudspin properties
.keyframes-cloudspin-bg(@name, @color1, @color2, @color3, @color4) {
    @keyframes ~"@{name}-bg" {
        0% { background-image: linear-gradient(0deg, @color1, @color2 22%, @color3 57%, @color4); }
        33% { background-image: linear-gradient(120deg, @color1, @color2 22%, @color3 57%, @color4); }
        66% { background-image: linear-gradient(240deg, @color1, @color2 22%, @color3 57%, @color4); }
        100% { background-image: linear-gradient(360deg, @color1, @color2 22%, @color3 57%, @color4); }
    }
}

.keyframes-cloudspin-transform(@name, @scale1, @scale2, @scale3, @scale4) {
    @keyframes ~"@{name}-transform" {
        0% { transform: scale(@scale1); }
        33% { transform: scale(@scale2); }
        66% { transform: scale(@scale3); }
        100% { transform: scale(@scale4); }
    }
}

.keyframes-cloudspin-filter(@name, @blur1, @blur2, @blur3, @blur4) {
    @keyframes ~"@{name}-filter" {
        0% { filter: blur(@blur1); }
        33% { filter: blur(@blur2); }
        66% { filter: blur(@blur3); }
        100% { filter: blur(@blur4); }
    }
}

// Define the glowring mixin
.keyframes-glowring(@name, @color1, @color2, @color3) {
    @keyframes ~"@{name}" {
        0% { background-image: linear-gradient(0deg, @color1, @color2 50%, @color3); }
        33% { background-image: linear-gradient(120deg, @color1, @color2 60%, @color3); }
        66% { background-image: linear-gradient(240deg, @color1, @color2 40%, @color3); }
        100% { background-image: linear-gradient(360deg, @color1, @color2 50%, @color3); }
    }
}